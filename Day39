844. Backspace String Compare


class Solution {
public:
    bool backspaceCompare(string s, string t) {
       
        // stack<char> s1,s2;

        // for(int i=0;i<s.size();i++){
        //     if(s[i] == '#')
        //     s1.pop();
        //     else
        //     s1.push(s[i]);
        // }
        // for(int i=0;i<t.size();i++){
        //     if(t[i] == '#')
        //     s2.pop();
        //     else
        //     s2.push(t[i]);
        // }
        // return s1 == s2;




        // stack<char> stk;
        // string s1="", s2="";

        // for(auto i: s){
        //     if(i == '#'){ stk.pop(); }
        //     else { stk.push(i); }
        // }
        // while(!stk.empty()){ s1 += stk.top(); stk.pop(); }
        
        // for(auto i: t){
        //     if(i == '#'){ stk.pop(); }
        //     else { stk.push(i); }
        // }
        // while(!stk.empty()){ s2 += stk.top(); stk.pop(); }
        // return s1==s2;


        int n = s.size(), m = t.size();

        for(int i=0;i<s.size();i++){
            if(s[i] == '#' && i!=0){
                s.erase(i-1,2);
                i-=2;
            }
            else if(i == 0 && s[i] == '#'){
                s.erase(i,1);
                i--;
            }
        }
        for(int i=0;i<t.size();i++){
            if(t[i] == '#' && i!=0){
                t.erase(i-1,2);
                i-=2;
            }
            else if(i == 0 && t[i] == '#'){
                t.erase(i,1);
                i--;
            }

        }
        return s == t;

    }
};







678. Valid Parenthesis String


class Solution {
public:
    bool checkValidString(string s) {
        stack<int> open,star;
        for(int i = 0; i<s.size(); i++)
        {
            if(s[i]=='(') open.push(i);
            else if(s[i]=='*')star.push(i);
            else{
                if(!open.empty())
                {
                    open.pop();
                }else if(!star.empty()) star.pop();
                else return false;
            }
        }
        while(!open.empty())
        {
            if(!star.empty())
            {
                if(star.top()>open.top()){
                    star.pop(); open.pop();
                }else return false;
            }else return false;
        }
        return true;
    }
};
