151. Reverse Words in a String


-> class Solution {
public:
// void reverse(string& s, int start, int end){
//     while(start <= end){
//         swap(s[start],s[end]);
//         start++;
//         end--;
//     }
// }
    string reverseWords(string s) {
        // int start=0 ;
        // for(int i=0;i<=s.size();i++){

        //     if(s[i] == ' ' || s[i] == '\0'){
        //         reverse(s, start, i-1);
        //         start=1+i;
        //     }

        // }

        // reverse(s,0,s.length()-1);

        // string str=""; bool flag =true;

        // for(int i=0;i<s.size();i++){
        //     if(isalnum(s[i]))
        //     {
        //         str.push_back(s[i]);
        //         flag = true;
        //     }
        //     if( s[i] == ' ' && flag == true  )
        //     {
        //         str.push_back(s[i]);
        //         flag = false;

        //     }

        // }

        // if(str[0] == ' ')
        // str.erase(str.begin());
        // if(str[str.size()-1] == ' ')
        // str.erase(str.size()-1);
       
        // return str;

        string ans="";
         int start=0 ;
         
        for(int i=0;i<=s.size();i++){
            if(s[i] == ' ' || s[i] == '\0'){
              string  temp = s.substr(start,i-1);
               ans = temp+ " "+ ans;
                start=1+i;
            }
        }
        return ans;  
    }
};






2716. Minimize String Length


class Solution {
public:
    int minimizedStringLength(string s) {

        //  unordered_set<char> st;
        //  for(auto c: s) st.insert(c);
        //  return st.size();


        int hash[26] = {0};
        int count =0;

        for(int i = 0; i < s.size() ;i++) {
            hash[s[i] - 'a']++;
        }

        for(auto i : hash) {
            if(i > 0)
            count++;
        }
        return count;
        
    }
};
2716. Minimize String Length



