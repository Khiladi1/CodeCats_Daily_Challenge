33. Search in Rotated Sorted Array


class Solution {
public:
    int search(vector<int>& nums, int target) {

        int mid,s=0,e=nums.size()-1;

        while(s<=e){
            mid=(s+e)/2;
            if(nums[mid]==target)
            return mid;
            if(nums[s]<=nums[mid]){
                
                if(nums[s]<=target && target<=nums[mid])
                e=mid-1;
                else
                s=mid+1;
            }
            else{
                if(nums[mid]<=target && target<= nums[e])
                s=mid+1;
                else
                e=mid-1;
            }
        }
        return -1;       
    }
};






74. Search a 2D Matrix


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row=matrix.size();
        int col=matrix[0].size();
        int start=0,end=row*col-1;
        int mid;
        while(start<=end){
            mid=start+(end-start)/2;
            if(matrix[mid/col][mid%col]==target)
            return 1;
            else if(matrix[mid/col][mid%col]<target)
            start=mid+1;
            else
            end=mid-1;
        }
        return 0;
        
    }
};

