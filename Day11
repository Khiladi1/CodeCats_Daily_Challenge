643. Maximum Average Subarray 

class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        int sum=0; double ans=0;
        for(int i=0;i<k;i++){
            sum+=nums[i];
        }
        ans=(double)sum/k;
        for(int i=1;i<nums.size()-k+1;i++){
            sum+=nums[i+k-1]-nums[i-1];
            ans=max(ans,(double)sum/k);

        }
        return ans;
        
    }
};


41. First Missing Positive


->  class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int n=nums.size();
        set<int>s;
        for(int i=0;i<n;i++){
            s.insert(nums[i]);
        }
        int i=1;

        while(i<=n){
            if(s.find(i)!=s.end()){
                i++;
            }
            else{
                return i;
            }
          
        }
          return n+1;
    }
};
