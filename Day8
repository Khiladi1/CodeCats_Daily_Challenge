189. Rotate Array

-> class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        // vector<int> v;

        //  k=k%nums.size();
   
        // for(int i=nums.size()-k;i<nums.size();i++){
        //     v.push_back(nums[i]);
        // }

        // for(int i= 0; i<nums.size()-k;i++)
        // v.push_back(nums[i]);

        // nums.clear();
        // for(int i=0;i<v.size();i++)
        // nums.push_back(v[i]);


        // vector<int> temp(nums.size());
        
        // for(int i=0;i<nums.size();i++){
            
        //     temp[(i+k)%nums.size()]=nums[i];
        // }
        // nums=temp;

         k=k%nums.size();
        reverse(nums.begin(), nums.begin()+(nums.size()-k));
        reverse(nums.begin()+nums.size()-k, nums.end());
        reverse(nums.begin(), nums.end());



        
    }
};


2248. Intersection of Multiple Arrays


->    class Solution {
public:
    vector<int> intersection(vector<vector<int>>& nums) {
    map<int,int> m;
        for(auto vec : nums) {
            for(auto num : vec) {
                m[num]++;
            }
        }
        int s=nums.size();
        vector<int> ans;
        for(auto it : m) {
            if(it.second==s) ans.push_back(it.first);
        }
        return ans;
        
    }
};
